plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.8'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.0.1'
}

group = 'com.justin.eagle'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

jar {
	enabled = true
}

bootJar {
	archiveClassifier = 'exec'
	mainClass = 'com.justin.eagle.bank.BankApplication'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
	main {
		java {
			srcDir "$rootDir/build/generated-openapi/src/main/java"
		}
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'jakarta.validation:jakarta.validation-api'
	implementation 'org.hibernate.validator:hibernate-validator'
	implementation("io.swagger.core.v3:swagger-annotations:2.2.35")
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
	implementation 'com.zaxxer:HikariCP'

	implementation("io.jsonwebtoken:jjwt-api:0.12.6")
	implementation("io.jsonwebtoken:jjwt-impl:0.12.6")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.12.6")
	implementation("com.auth0:java-jwt:4.5.0")
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'io.zonky.test:embedded-postgres:2.0.1'
	testImplementation 'org.skyscreamer:jsonassert:1.5.0'

	implementation("org.liquibase:liquibase-core")

//	compileOnly 'com.github.javafaker:javafaker:1.0.2'
//	testImplementation("org.yaml:snakeyaml:2.4")

	testImplementation("org.mockito:mockito-junit-jupiter:5.18.0")
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set("$rootDir/openapi/openapi.yaml")
	outputDir.set("$buildDir/generated-openapi")
	apiPackage.set("com.justin.eagle.bank.generated.openapi.rest.api")
	invokerPackage.set("org.openapi.example.invoker")
	modelPackage.set("com.justin.eagle.bank.generated.openapi.rest.model")
	configOptions.set([
	        dateLibrary   : 'java8',
			bigDecimalAsString : 'true',
			interfaceOnly  : 'true',
			generateSupportingFiles : 'false',
			openApiNullable : 'false',
			useBeanValidation : 'true',
			useJakartaEe : 'true',
			useSpringBoot3 : 'true',
			additionalModelTypeAnnotations : '@lombok.Builder; @lombok.NoArgsConstructor; @lombok.AllArgsConstructor; ',
			generatedConstructorWithRequiredArgs : 'false',
			documentationProvider : 'springdoc'

	])
	typeMappings.set([
	        'Timestamp' : 'Instant',
			'Date': 'LocalDate',
			'OffsetDateTime' : 'Instant'
	])
	importMappings.set([
	        'java.time.OffsetDateTime': 'java.time.Instant'
	])
	additionalProperties.set([
	        removeEnumValuePrefix: 'false'
	])
}

compileJava.dependsOn tasks.openApiGenerate